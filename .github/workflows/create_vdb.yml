name: Criar VDB via API do Delphix

on:
  push:
    branches: 
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!main'     # excludes main
  workflow_dispatch:

jobs:
  # This workflow contains a job to manage VDB and SelfService container life-cycle
  manage_vdbs:
    environment:
      name: delphix-engine
    runs-on: ubuntu-18.04
    container: pioro/dxtoolkit:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Runs a set of commands using the runners shell
      - name: Set dxtools.conf
        run: |
          mkdir /config
          echo {\"data\":[{\"hostname\" : \"Delphix\",\"ip_address\" : \"174.129.54.60\",\"username\" : \"admin\",\"password\" : \"admin\",\"port\" : \"80\",\"default\" : \"false\",\"encrypted\" : \"false\",\"timeout\" : \"60\"}]} > /config/dxtools.conf
                  
      # Criando VDB
      - name: Create VDB
        run: dx_provision_vdb -d Delphix -group DS_SQLSERVER -sourcename Ds_AdventureWorks2019 -targetname  ${{ github.ref_name }} -dbname  ${{ github.ref_name }} -environment TGT_SQLSERVER -type mssql -envinst TGT_SQLSERVER

